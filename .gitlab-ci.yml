stages:
  - setup
  - lint
  - test

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always

default:
  image: python:3.13

variables:
  CLI_VENV_DIR: "$CI_PROJECT_DIR/cli/.venv"
  BACKEND_VENV_DIR: "$CI_PROJECT_DIR/backend/.venv"

setup_cli:
  stage: setup
  script:
    - cd cli
    - python -m venv $CLI_VENV_DIR
    - source $CLI_VENV_DIR/bin/activate
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
  rules:
    - changes:
        - cli/**
  artifacts:
    paths:
      - cli/.venv
    expire_in: 1 hour

setup_backend:
  stage: setup
  script:
    - cd backend
    - python -m venv $BACKEND_VENV_DIR
    - source $BACKEND_VENV_DIR/bin/activate
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
  rules:
    - changes:
        - backend/**
  artifacts:
    paths:
      - backend/.venv
    expire_in: 1 hour

lint_cli:
  stage: lint
  script:
    - cd cli
    - source $CLI_VENV_DIR/bin/activate
    - poetry run pylint skylock_cli tests
  needs:
    - setup_cli
  rules:
    - changes:
        - cli/**

test_cli:
  stage: test
  script:
    - cd cli
    - source $CLI_VENV_DIR/bin/activate
    - poetry run pytest
  needs:
    - setup_cli
  rules:
    - changes:
        - cli/**

lint_backend:
  stage: lint
  script:
    - cd backend
    - source $BACKEND_VENV_DIR/bin/activate
    - poetry run pylint skylock
  needs:
    - setup_backend
  rules:
    - changes:
        - backend/**

test_backend:
  stage: test
  script:
    - cd backend
    - source $BACKEND_VENV_DIR/bin/activate
    - poetry run pytest
  needs:
    - setup_backend
  rules:
    - changes:
        - backend/**
